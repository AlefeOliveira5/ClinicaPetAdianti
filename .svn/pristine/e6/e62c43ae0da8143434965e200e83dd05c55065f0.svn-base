<?php
/**
 * AnimalList
 *
 * @version    1.0
 * @package    control
 * @subpackage classes
 * @author     Johnas

 */
class AnimalList extends TStandardList
{
    protected $form;     // registration form
    protected $datagrid; // listing
    protected $pageNavigation;
    protected $formgrid;
    protected $deleteButton;
    protected $transformCallback;
    
    /**
     * Page constructor
     */
    public function __construct()
    {
        parent::__construct();
        
        parent::setDatabase('bancomysql');            // defines the database
        parent::setActiveRecord('Animal');   // defines the active record
        parent::setDefaultOrder('id', 'asc');         // defines the default order
        parent::addFilterField('nome_animal', 'like', 'nome_animal'); // filterField, operator, formField
        parent::addFilterField('raca', 'like', 'raca'); // filterField, operator, formField
        
        // creates the form
        $this->form = new BootstrapFormBuilder('form_search_Animal');
        $this->form->setFormTitle('Animal');
        
        // create the form fields
        $nome_animal = new TEntry('Nome');
        $raca = new TEntry('RaÃ§a');
        
        // add the fields
        $this->form->addFields( [new TLabel('Nome')], [$nome_animal] );
        $this->form->addFields( [new TLabel('RaÃ§a')], [$raca] );

        $nome_animal->setSize('70%');
        $raca->setSize('50%');
        
        // keep the form filled during navigation with session data
        $this->form->setData( TSession::getValue('Animal_filter_data') );
        
        // add the search form actions
        $btn = $this->form->addAction(_t('Find'), new TAction(array($this, 'onSearch')), 'fa:search');
        $btn->class = 'btn btn-sm btn-primary';
        $this->form->addAction(_t('New'),  new TAction(array('AnimalForm', 'onEdit')), 'fa:plus green');
        
        // creates a DataGrid
        $this->datagrid = new BootstrapDatagridWrapper(new TDataGrid);
        $this->datagrid->datatable = 'true';
        $this->datagrid->style = 'width: 100%';
        $this->datagrid->setHeight(320);
        
        // creates the datagrid columns
        $column_nome_animal = new TDataGridColumn('nome_animal', 'Nome_Animal', 'left');
        $column_raca = new TDataGridColumn('raca', 'Raca', 'left');


        // add the columns to the DataGrid
        $this->datagrid->addColumn($column_nome_animal);
        $this->datagrid->addColumn($column_raca);


        // creates the datagrid column actions
        
        $order_nome_animal = new TAction(array($this, 'onReload'));
        $order_nome_animal->setParameter('order', 'nome_animal');
        $column_nome_animal->setAction($order_nome_animal);
       
        
        $order_raca = new TAction(array($this, 'onReload'));
        $order_raca->setParameter('order', 'raca');
        $column_raca->setAction($order_raca);
        
        // create EDIT action
        $action_edit = new TDataGridAction(array('AnimalForm', 'onEdit'));
        $action_edit->setButtonClass('btn btn-default');
        $action_edit->setLabel(_t('Edit'));
        $action_edit->setImage('far:edit blue');
        $action_edit->setField('id');
        $this->datagrid->addAction($action_edit);
        
        // create DELETE action
        $action_del = new TDataGridAction(array($this, 'onDelete'));
        $action_del->setButtonClass('btn btn-default');
        $action_del->setLabel(_t('Delete'));
        $action_del->setImage('far:trash-alt red');
        $action_del->setField('id');
        $this->datagrid->addAction($action_del);
        
        // create the datagrid model
        $this->datagrid->createModel();
        
        // create the page navigation
        $this->pageNavigation = new TPageNavigation;
        $this->pageNavigation->enableCounters();
        $this->pageNavigation->setAction(new TAction(array($this, 'onReload')));
        $this->pageNavigation->setWidth($this->datagrid->getWidth());

        $panel = new TPanelGroup;
        $panel->add($this->datagrid);
        $panel->addFooter($this->pageNavigation);


        // header actions
        $dropdown = new TDropDown(_t('Export'), 'fa:list');
        $dropdown->setPullSide('right');
        $dropdown->setButtonClass('btn btn-default waves-effect dropdown-toggle');
        $dropdown->addAction( _t('Save as CSV'), new TAction([$this, 'onExportCSV'], ['register_state' => 'false', 'static'=>'1']), 'fa:table fa-fw blue' );
        $dropdown->addAction( _t('Save as PDF'), new TAction([$this, 'onExportPDF'], ['register_state' => 'false', 'static'=>'1']), 'far:file-pdf fa-fw red' );
        $dropdown->addAction( _t('Save as XML'), new TAction([$this, 'onExportXML'], ['register_state' => 'false', 'static'=>'1']), 'fa:code fa-fw green' );
        $panel->addHeaderWidget( $dropdown );
        

        
        // vertical box container
        $container = new TVBox;
        $container->style = 'width: 100%';
        $container->add(new TXMLBreadCrumb('menu.xml', __CLASS__));
        $container->add($this->form);
        $container->add($panel);
        
        parent::add($container);
    }
}
